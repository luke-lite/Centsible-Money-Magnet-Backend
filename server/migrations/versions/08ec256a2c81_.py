"""empty message

Revision ID: 08ec256a2c81
Revises: 
Create Date: 2024-03-11 12:22:29.947152

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '08ec256a2c81'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(), nullable=False),
    sa.Column('category_description', sa.String(), nullable=False),
    sa.Column('category_type', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category_table'))
    )
    op.create_table('household_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_household_table'))
    )
    op.create_table('users_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('_password_hash', sa.String(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.Column('household_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['household_id'], ['household_table.id'], name=op.f('fk_users_table_household_id_household_table')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users_table')),
    sa.UniqueConstraint('name', name=op.f('uq_users_table_name'))
    )
    op.create_table('bank_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_token', sa.String(), nullable=False),
    sa.Column('bank_name', sa.String(), nullable=False),
    sa.Column('account_type', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users_table.id'], name=op.f('fk_bank_table_user_id_users_table')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bank_table')),
    sa.UniqueConstraint('public_token', name=op.f('uq_bank_table_public_token'))
    )
    op.create_table('goals_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('household_budget', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('target_amount', sa.String(), nullable=False),
    sa.Column('current_amount', sa.String(), nullable=False),
    sa.Column('deadline', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('household_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['household_id'], ['household_table.id'], name=op.f('fk_goals_table_household_id_household_table')),
    sa.ForeignKeyConstraint(['user_id'], ['users_table.id'], name=op.f('fk_goals_table_user_id_users_table')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_goals_table'))
    )
    op.create_table('monthly_expenses_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_household_budget', sa.Boolean(), nullable=False),
    sa.Column('user_expected_income', sa.String(), nullable=False),
    sa.Column('actual_income', sa.String(), nullable=False),
    sa.Column('user_expected_monthly_expenses_total', sa.String(), nullable=False),
    sa.Column('is_fluctuating_income', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('household_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['household_id'], ['household_table.id'], name=op.f('fk_monthly_expenses_table_household_id_household_table')),
    sa.ForeignKeyConstraint(['user_id'], ['users_table.id'], name=op.f('fk_monthly_expenses_table_user_id_users_table')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_monthly_expenses_table'))
    )
    op.create_table('expense_item_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('item_desc', sa.String(), nullable=True),
    sa.Column('planned_amount', sa.Integer(), nullable=False),
    sa.Column('monthly_expenses_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category_table.id'], name=op.f('fk_expense_item_table_category_id_category_table')),
    sa.ForeignKeyConstraint(['monthly_expenses_id'], ['monthly_expenses_table.id'], name=op.f('fk_expense_item_table_monthly_expenses_id_monthly_expenses_table')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_expense_item_table'))
    )
    op.create_table('transactions_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_description', sa.String(), nullable=False),
    sa.Column('bank_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bank_id'], ['bank_table.id'], name=op.f('fk_transactions_table_bank_id_bank_table')),
    sa.ForeignKeyConstraint(['category_id'], ['category_table.id'], name=op.f('fk_transactions_table_category_id_category_table')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transactions_table'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions_table')
    op.drop_table('expense_item_table')
    op.drop_table('monthly_expenses_table')
    op.drop_table('goals_table')
    op.drop_table('bank_table')
    op.drop_table('users_table')
    op.drop_table('household_table')
    op.drop_table('category_table')
    # ### end Alembic commands ###
